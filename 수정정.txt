Map ================================================================================






<template>
    <v-app>
        <v-card color="#FAF5EB">
            <h1 style="font-size: 13px; text-align: center;" class="pa-2">좌표 클릭 후 아래의 확인 버튼을 눌러주세요!</h1>
        </v-card>
        <div id= "map" style="width:100%;height:670px;"></div>
        <v-btn @click="getTopList" color="#FAF5EB">확인</v-btn>
    </v-app>
</template>
<script>
import { mapActions } from 'vuex'
export default {

    data(){
        return{
     

        }
    },
    mounted(){
        if(window.kakao && window.kakao.maps) {
          
            this.initMap()
        } else {
            const script = document.createElement('script')
            script.onload = () => kakao.maps.load(this.initMap)
            script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=e4ae1156e9644814145b77eeb30b26b0&libraries=services'
            document.head.appendChild(script)
        }
    },
    methods: {
        initMap(){    
            var mapContainer = document.getElementById('map'),
            mapOption = {
                center: new kakao.maps.LatLng(35.918423, 128.285210),
                level: 3
            }
            var map = new kakao.maps.Map(mapContainer, mapOption)
            var marker = new kakao.maps.Marker()


            /// 지도 표시

            if(navigator.geolocation){
                navigator.geolocation.getCurrentPosition(function(position){
                    let lat = position.coords.latitude,
                        lon = position.coords.longitude;
                    var locPosition = new kakao.maps.LatLng(lat, lon)

                    localStorage.setItem('lat',lat)
                    localStorage.setItem('lon',lon)

    
                   
                       
                    marker.setPosition(locPosition)
                    marker.setMap(map)
                    map.setCenter(locPosition)
                })

            }else{
                var locPosition = new kakao.maps.LatLng(33.450701, 126.570667)               
                marker.setPosition(locPosition)
                marker.setMap(map)
                map.setCenter(locPosition)    
            }

            

        //위도 경도로 위치 표시


            var geocoder = new kakao.maps.services.Geocoder()

            var marker = new kakao.maps.Marker()

            
      
            kakao.maps.event.addListener(map, 'click', function(mouseEvent) {
                searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
                    if (status === kakao.maps.services.Status.OK) {

                        var Latlng = mouseEvent.latLng


                         localStorage.setItem('lat', Latlng.getLat())
                         localStorage.setItem('lon', Latlng.getLng())
                    


                        // 마커를 클릭한 위치에 표시합니다 
                        marker.setPosition(mouseEvent.latLng)
                        marker.setMap(map);
                        map.setCenter(mouseEvent.latLng)
                        //console.log(localStorage.getItem('lat'))
                        
                    }                
                    
                    
                });
            });
    
            function searchDetailAddrFromCoords(coords, callback) {
            // 좌표로 법정동 상세 주소 정보를 요청합니다
                geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
               
            }


        
        
        },
        ...mapActions(['getTopList'])
 
    } ///클릭한 위치 지도로 전환

   
}
</script>



==============================================================================

Chat  수정

1. PayDetail.vue => a_num 지움
2. ChatController => chat으로 변경
3.	<insert id="CreateChat" parameterType="Chat">
		insert into chat(ch_seller, ch_buyer)
				SELECT #{seller}, #{buyer} FROM dual
		WHERE 
		NOT EXISTS( SELECT ch_num
					FROM chat
					WHERE (ch_seller =  #{seller} AND ch_buyer = #{buyer}) OR  (ch_seller = #{buyer} AND ch_buyer= #{seller}))
		<selectKey keyProperty="ch_num" resultType="int" order="AFTER">
			select last_insert_id()
		</selectKey>

	</insert>

----보류 대화방 만들었을때 push 오류




==========================================================================================Addr 수정

Address
<template>
<v-app class="pl-1">
    <div id="daum_postcode"  style="position:fixed;overflow:hidden;z-index:1;-webkit-overflow-scrolling:touch;"></div>


</v-app>
</template>


<script>
export default {


    data(){
        return{
            fullAddress: null,
            extraAddress: '',
            bname: null,
            buildingName: null,
            address: null,
            title: null,
            data:[],
            town: null

         

        }
    },

    mounted(){
        const script = document.createElement('script')
        script.src = "https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"
        document.head.appendChild(script)


        
        script.onload = ()=>{
            
            var PostcodContainer = document.getElementById('daum_postcode')
            new daum.Postcode({

            oncomplete: (e)=>{
                //console.log(e)
            
                var fullAddress = e.address
                var extraAddress = ''

                //console.log(this.fullAddress)
                if (e.addressType === 'R') {
                    if (e.bname !== '') {
                        extraAddress += e.bname
                    }
                    if (e.buildingName !== '') {
                        extraAddress += (extraAddress !== '' ? `, ${e.buildingName}` : e.buildingName)
                    }
                    fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '')

                    //console.log(fullAddress)
                    var town = null
                    if(e.bname === ''){
                        town = e.bname1
                    }else{
                        town = e.bname
                    }

                    
                    this.$emit('Addr', {fulladdress: fullAddress})

                    
                
                    fullAddress= ''
                    extraAddress= ''
                }

                },
                onresize:(size)=>{
                    PostcodContainer.style.height = 800+'px'
                    PostcodContainer.style.width = 400+'px'
                },
                width: '100%',
                height: '100%'
            }).embed(PostcodContainer)
        }



        
    },

}
</script>

import Address from '@/components/Address.vue'
Writing && Edit 변경





======================================================================================== Null XX


<template>
    <v-app>
        <v-container class="pa-3" v-show="address_show === false" >
            <div v-show ="Edit_error === true">
                <h1 class="red--text" style="font-size: 15px;">
                    입력하신걸 확인해 주세요!
                </h1>
            </div>
            <v-row justify="start">
                <v-col 
                cols="5"
                sm="6"
                class="d-flex"
                >
                    <v-select
                        :placeholder= proInfo.industry
                        v-model="industry"
                        :items="industries"
                        single-line
                        dense
                    ></v-select>
                </v-col>
                <v-col
                cols="5"
                sm="6"
                class="d-flex"
            
                >
                    <v-select
                        :placeholder= proInfo.kind
                        v-model="kind"
                        :items="kinds"
                        single-line
                        dense
                    ></v-select>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                class="py-0"
                
                cols="3">
                    <h1 style="font-size: 15px">제목</h1>
                
                </v-col>
                <v-col
                cols="9"
                 class="py-0"
                >
                    <v-text-field
                    :placeholder= aucInfo.title
                    v-model="title"
                    outlined
                    rows="1"
                    dense
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">내용</h1>
                </v-col>
                <v-col
                cols="9"
                class="py-0" 
                >           
                    <v-textarea
                    :placeholder= aucInfo.content
                    v-model="content"
                    outlined
                    rows="2"
                    >
                    </v-textarea>
                </v-col>          
            </v-row> 

            <v-row >
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">브랜드</h1>               
                </v-col>
                <v-col
                cols="9"
                class="py-0" 
                >
                    <v-text-field
                    :placeholder= proInfo.brand
                    v-model="brand"
                    outlined
                    rows="1"
                    dense
                    height="2"
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">연식</h1>
                </v-col>
                <v-col
                cols="5"
                class="py-0"  
                >
                    <v-select       
                    :items="yearOptions"
                    single-line
                    dense
                    class="mt-0"
                    v-model="year"
                    :placeholder="proInfo.year"

                    ></v-select>
                </v-col>          
            </v-row>
            <v-row >
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">시작가격</h1>               
                </v-col>
                <v-col
                cols="9"
                class="py-0"
                >
                    <v-text-field
                    v-model="aucInfo.startprice"
                    outlined
                    rows="1"
                    dense
                    height="2"
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row >
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">주소</h1>               
                </v-col>
                <v-col
                cols="9"
                class="py-0"
                >
                    <v-text-field
                    :placeholder= addrInfo.addr
                    v-model="addr"
                    outlined
                    rows="1"
                    dense
                    height="2"
                    @click="getAddress"
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">마감기한</h1>               
                </v-col>
                
                <v-col cols="7"  class="py-0">
                    <v-select
                    :items="item"
                    label="최대 10일"
                    v-model="day"
                    dense
                    class="mt-0"
                    ></v-select>
                
                </v-col> 

            </v-row >
            <h1 class="primary--text my-3" style="font-size: 15px;" >사진 등록은 필수입니다!</h1>
            <v-row align="center" class="pt-3">
                <v-col
                cols="2"
                >
                    <input ref="imageInput" type="file" accept=".gif, .jpg, .png" @change="ChangeImages" hidden >
                    <v-btn
                    @click="ClickImageUpload"
                    icon
                    color="grey"
                    >
                        <i class="far fa-plus-square" style="font-size: 30px;"></i>
                    </v-btn>
                </v-col> 

                <v-col
                cols="3" 
                v-for="(list, idx) in beforeImage"
                :key="idx"
                >   
                    <v-card
                    flat
                    >             
                        <v-img 
                        :src="require('@/assets/'+list.pictureName)"
                        max-height="60"
                        max-width="60"
                        >
                        </v-img>
                
                        <v-btn
                        absolute
                        fab
                        x-small
                        left
                        top
                        class="ml-7"
                        icon
                        @click="Beforedelete({idx: idx, pi_num: list.pi_num})"
                        ><i class="far fa-times-circle" style="font-size: large"></i></v-btn>
                        </v-card>
                    </v-col> <!--여기까지 원래 이미지 수정삭제 하는곳 beforeImage -->

                    <v-col  v-for="(a,i) in showImage" :key="a.image" >
                    <v-card
                    flat
                    :key="i"
                    > 
                    
                        <v-img   
                        max-height="60"
                        max-width="60"
                        :src="a.image"
                        >
                        </v-img>
                        <v-btn
                        absolute
                        fab
                        x-small
                        left
                        top
                        class="ml-7"
                        icon
                        @click="Nowdelete({i})"
                        ><i class="far fa-times-circle" style="font-size: large"></i></v-btn>            
                    </v-card>
                    </v-col>             
            </v-row>
            <v-btn  
            class="primary mt-8"
            block
            @click="isEmpty({
                a_num: aucInfo.a_num,
                p_num: proInfo.p_num,
                title,
                content,
                industry,
                kind ,
                brand,
                year,
                startprice: aucInfo.startprice,
                files,
                addr,
                day,
                town,
                pi_numList

            })"
            >확인</v-btn>
        </v-container>
        <v-container v-show="address_show === true"> 
            <Address @Addr="ResultAddress"></Address>
        </v-container>
    </v-app>
    
</template>
<script>
import { mapActions, mapState } from 'vuex';
// import EditAddress from './EditComponents/EditAddress.vue';
import Address from '@/components/Address.vue'

export default{
  components: { Address },
    data() {
        
        return {
            town: null,
            addr: null,
            industry:null,
            kind: null,
            title: null,
            content: null,
            brand: null,
            year: null,
            startprice: 0,
            username: null,
            showImage:[],// 일단 보여주기식 이미지
            files: [], //신규파일전체
    

            pi_numList: [],


            yearOptions:[], 
            select: null,
            industries: ['한식', '찜/탕','면요리','고기/구이','족발/ 보쌈','치킨','분식','중식','동남아식','회/초밥','일식/돈까스','피자/샐러드','호프/술집','카페/베이커리','배달전문점'],
            kinds: ['작업대','커피머신','그릴기','냉동 절육기','제빙기','오븐기','튀김기','기름 정제기','씽크대','소독기','가스렌지','냉장고/쇼케이스','보온통','에어컨','회전국솥','절단기','벽선단','기타'],
            item: [1,2, 3, 4, 5, 6, 7, 8, 9, 10],
            day: null,
            count: 0


        }

    },
    beforeCreate(){

    },
    mounted() {



        // 연도 선택 옵션 리스트 설정
        let year = new Date().getFullYear();
        for (let i = 1970; i <= year; i++) {
        this.yearOptions.push(i);        
        }
       
    },
///////////////////////////////////////////////////////////연도 선택
    methods: {

        isEmpty (payload){
            for(var key in payload){
                if(!payload[key]){
                    this.$store.state.Edit_error = true
                }else{
                    this.count++
                    console.log(this.count)    
                }
            }
            if(this.count === 13){
                this.$store.dispatch('DetailEdit', payload)
                this.$store.state.Edit_error = false

            }else{
                this.count =0
            }

        },

        ClickImageUpload(){
            this.$refs.imageInput.click();     
        },
        
            
        ChangeImages(i){ 
            
            const file = i.target.files[0]
            this.files.push(file)

            let image = URL.createObjectURL(file)

            
            this.showImage.push({image: image})
         
        },
        Beforedelete(payload){
           
            this.beforeImage.splice(payload.idx, 1)
            this.pi_numList.push(payload.pi_num)
           // console.log(this.pi_numList)
            //console.log(this.beforeImage)
        },
        Nowdelete(i){
            this.files.splice(i, 1)    
            this.showImage.splice(i, 1)
            //console.log( this.showImage)
            //console.log(this.files)
        },
        getAddress(){
            this.$store.state.address_show= true
        },
        ResultAddress(payload){

           
            // this.$store.state.addrInfo.addr = payload.fulladdress
            // this.$store.state.addrInfo.town= payload.town 
            
            this.$store.state.address_show= false
            this.addr = payload.fulladdress
            this.town = payload.town
            

        }
        
       
    },
    computed: {
        ...mapState({aucInfo:'aucInfo',likeInfo:'likeInfo', proInfo:'proInfo', offerInfo:'offerInfo', addrInfo: 'addrInfo' ,aucInfo:'aucInfo', beforeImage: 'beforeImage', address_show: 'address_show', Edit_error:'Edit_error'})
    },
    created(){
    }
}
</script>



======================================================================================================================================







<template>
    <v-app>
        <v-container class="pa-5" v-show=" Writingshow=== true">
            <div v-show="WritingError === true">
                <h1 class="red--text" style="font-size: 15px;">
                    입력하신걸 확인해 주세요!
                </h1>
            </div>
            <v-row justify="start">
                <v-col 
                cols="5"
                sm="6"
                class="d-flex"
                >
                    <v-select
                        v-model="industry"
                        :items="industries"
                        single-line
                        dense
                    ></v-select>
                </v-col>
                <v-col
                cols="5"
                sm="6"
                class="d-flex"
            
                >
                    <v-select
                        v-model="kind"
                        :items="kinds"
                        single-line
                        dense
                    ></v-select>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                class="py-0"
                
                cols="3">
                    <h1 style="font-size: 15px">제목</h1>
                
                </v-col>
                <v-col
                cols="9"
                 class="py-0"
                >
                    <v-text-field
                    v-model="title"
                    outlined
                    rows="1"
                    dense
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">내용</h1>
                </v-col>
                <v-col
                cols="9"
                class="py-0" 
                >           
                    <v-textarea
                    v-model="content"
                    outlined
                    rows="2"
                        
                    >
                    </v-textarea>
                </v-col>          
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">브랜드</h1>               
                </v-col>
                <v-col
                cols="9"
                class="py-0" 
                >
                    <v-text-field
                    v-model="brand"
                    outlined
                    rows="1"
                    dense
                    height="2"
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row>
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">연식</h1>
                </v-col>
                <v-col
                cols="5"
                class="py-0"  
                >
                    <v-select       
                    :items="yearOptions"
                    single-line
                    dense
                    class="mt-0"
                    v-model="year"
                    ></v-select>
                </v-col>          
            </v-row>
            <v-row >
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">시작가격</h1>               
                </v-col>
                <v-col
                cols="9"
                class="py-0"
                >
                    <v-text-field
                    v-model="startprice"
                    outlined
                    rows="1"
                    dense
                    height="2"
                    ></v-text-field>
                </v-col>
            </v-row>
            <v-row >
                <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">주소</h1>               
                </v-col>
                <v-col
                cols="9"
                class="py-0"
                >
                    <v-text-field
                    v-model="address"
                    outlined
                    rows="1"
                    dense
                    height="2"
                    @click="Address"
                    ></v-text-field><!--  -->
                </v-col>
            </v-row>
            <v-row>
                 <v-col
                cols="3"
                class="py-0" 
                >
                    <h1 style="font-size: 15px">마감기한</h1>               
                </v-col>
                
                <v-col cols="7"  class="py-0">
                    <v-select
                    :items="item"
                    label="최대 10일"
                    v-model="day"
                    dense
                     class="mt-0"
                    ></v-select>
                
                </v-col> 

            </v-row >

            <h1 class="primary--text my-5" style="font-size: 16px;" >사진 등록은 필수입니다!</h1>
            <v-row align="center">
                <v-col
                cols="3"
                >
                    <input ref="imageInput" type="file"  @change="ChangeImages" hidden >
                    <v-btn
                    @click="ClickImageUpload"
                    icon
                    color="grey"
                    >
                        <i class="far fa-plus-square" style="font-size: 30px;"></i>
                    </v-btn>
                </v-col>
                    <v-col
                    cols="3" 
                    v-for="(list, idx) in showImage"
                    :key="idx"
                    >               
                        <v-img 
                        v-if="showImage" 
                        :src="list.image"
                        max-height="60"
                        max-width="60"
                        ></v-img>  

                    </v-col>         
            </v-row>
             <v-btn  
            class="primary mt-5"
            block
            @click="isEmpty ({ 
                title,
                content,
                industry,
                kind ,
                brand,
                year,
                startprice,
                files,
                address,
                day,
                town

            })"
            >다음</v-btn>
            <v-virtual-scroll
            height="1000"
            item-height="20"
            ></v-virtual-scroll>     
        </v-container>
        <div v-show=" Writingshow=== false" >
            <Address  @Addr ="result_Addr" ></Address> 
        </div>
    </v-app>
</template>

<script>
import { mapActions, mapState } from 'vuex';
import Address from '@/components/Address.vue'

export default{
    data() {
        
        return {

            industry: null,
            kind: null,
            title: null,
            content: null,
            brand: null,
            year: null,
            startprice: null,
            username: null,
            file: null,
            address: null,
            town: null,
            showImage:[],
            files:[],


            writingInfo:{},
            day: null,
            Writingshow: true,



            yearOptions:[], 
            select: null,
            industries: ['한식', '찜/탕','면요리','고기/구이','족발/ 보쌈','치킨','분식','중식','동남아식','회/초밥','일식/돈까스','피자/샐러드','호프/술집','카페/베이커리','배달전문점'],
            kinds: ['작업대','커피머신','그릴기','냉동 절육기','제빙기','오븐기','튀김기','기름 정제기','씽크대','소독기','가스렌지','냉장고/쇼케이스','보온통','에어컨','회전국솥','절단기','벽선단','기타'],
            item: [1,2, 3, 4, 5, 6, 7, 8, 9, 10],

            date: new Date().toISOString().substr(0, 10),
            menu: false,
            modal2: false,
            time : null,
            count: 0
        

        }

    },
    mounted() {
        // 연도 선택 옵션 리스트 설정
        let year = new Date().getFullYear();
        for (let i = 1970; i <= year; i++) {
        this.yearOptions.push(i);
        
    
        }





    },

    methods: {
        ClickImageUpload(){
            this.$refs.imageInput.click();     
        },
        
            
        ChangeImages(i){ 
            
            const file = i.target.files[0]
            this.files.push(file)
            console.info(this.files)
            let image = URL.createObjectURL(file)
            this.showImage.push({image})
        },
 
        result_Addr(payload){
            console.log(payload)
            this.Writingshow= true  
            this.address =payload.fulladdress
            this.town = payload.town
      
        },
        Address(){
            this.Writingshow= false
        },
        isEmpty (payload){
            for(var key in payload){
                if(!payload[key]){
                    this.$store.state.WritingError = true
                }else{
                    this.count++
                    // console.log(this.count)    
                }
            }
            if(this.count === 10){
                this.$store.dispatch('Writing', payload)
                this.$store.state.WritingError = false

            }else{
                this.count =0
            }

        }


    },
    computed: {
        ...mapState(['userInfo','ImageList', 'WritingError'])
    },
    created(){
        this.username= this.userInfo.username
    
      
    },
    components: {
        Address
    }
    
    

}

</script>

















