<UserController>

1. sms 문자 보낼때 
.post('http://localhost:9200/api/user/sendSMS', payload)

payload로 폰번호 보내짐


=> .post(`http://localhost:9200/api/user/${phone}`)
       or  .post(`http://localhost:9200/api/user? phone=${phone}`)


2. cetification 확인만 하는 함수 (인증번호)

3. signup  회원가입 정보 보낼때

.post('http://localhost:9200/api/user/signup', payload)

=>  .post('http://localhost:9200/api/user', payload)


4.login 로그인할때 확인 하는 함수

.post('http://localhost:9200/api/user/login', payload)

payload로 아이디 비밀번호로 보내짐

=> .post('http://localhost:9200/api/user', payload)

Q)  3번과 4번 두개가 겹치는 상황


5 .getUserInfo 로그인후 토큰으로 사용자 정보 가져오는 함수 (config= 토큰)

.get('http://localhost:9200/api/user/unpackToken', config)

=> .get('http://localhost:9200/api/user', config)



6. EditOK  사용자 정보 수정하는 함수 

.post('http://localhost:9200/api/user/edit', userInfo)

=> .put('http://localhost:9200/api/user', userInfo)


7. deleteOK 사용자 계정 탈퇴

.delete(`http://localhost:9200/api/user/delete/${username}`)

=> .delete(`http://localhost:9200/api/user/${username}`)






<ProductController>

1.WritingOK 게시물 작성하고 정보 보내는 함수

.post('http://localhost:9200/api/product' , formData, config)

formData 정보 = Product 정보, Picture정보


2. getSaleList 판매리스트 정보 가져오는 함수(config= 토큰)

.get('http://localhost:9200/api/product/salelist', config)

=> .get('http://localhost:9200/api/product', config)


3. getSaledetail 판매 품목 상세 정보를 가져옴

.get(`http://localhost:9200/api/product/saledetail?p_num=${payload.p_num}`)

=> .get(`http://localhost:9200/api/product ?p_num=${payload.p_num}`)

Dres.data= Product정보+ Picture정보 + Auction 정보



4.  SaleEditOK 판매 품목 수정할때(config= 토큰)

.post('http://localhost:9200/api/product/edit',  formData, config)

=>.put('http://localhost:9200/api/product',  formData, config) 


수정방식 = product 정보 - 전체  update 
                picture 정보 - 기존 사진들 삭제시 : 번호를 모아둠 / 그 번호들을 for문으로 삭제
                                 - 새로운 사진 추가시: 새로운 사진(들)을 multipartfile 로 전달 / 기존의 사진 insert 방식 이용


5. SaleDeleteOK 판매 품목 삭제 할때 

 .delete(`http://localhost:9200/api/product/${p_num}`)










 