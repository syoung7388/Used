<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.used.example.mapper.ProductMapper">
	<insert id="createProduct" parameterType="com.used.example.domain.Product">
		insert into product ( 
		
								u_username,
								p_kind,
								p_industry,
								p_brand,
								p_year,
								p_startprice,
								p_endprice,
								p_title,
								p_content,
								p_sale,
								p_address
		
		) values (				
		
								#{username},
								#{kind},
								#{industry},
								#{brand},
								#{year},	
								#{startprice},
								#{endprice},
								#{title},
								#{content},
								#{sale},
								#{address}
		)
		
		<selectKey resultType= "int" keyProperty="p_num" order="AFTER" >
			select last_insert_id()
		</selectKey>
	</insert>
	<insert id= "createPicture" parameterType= "com.used.example.domain.Picture">
			insert into picture(
				p_num,
				pi_name
			) values
					<foreach collection="pictureNames" item="list" separator=" , ">
					(#{p_num}, #{list})
					</foreach>
	</insert>
	
	
	
	
	
	
	<resultMap type="Picture" id="PictureMap">
		<result property="pictureName" column="pi_name" />
	</resultMap>
	
	<resultMap id="ListMap" type="Product">
		<id property= "p_num" column= "p_num" />
		<result property= "p_num" column= "p_num" />
		<result property= "username" column= "u_username" />
		<result property= "title" column= "p_title" />
		<result property= "p_date" column= "p_date" />
		<collection property="picture" resultMap="PictureMap"></collection>
	</resultMap>
	
	
	
	<select id= "getSaleList" parameterType="String" resultMap= "ListMap">	
		SELECT			a.p_num, 				
						a.u_username,			
						a.p_title,			
						a.p_date,				
						b.pi_name				
		FROM			product a
		LEFT JOIN	    picture b ON a.p_num = b.p_num
		WHERE 		    u_username= #{username}
		AND             a.p_sale='false'
	</select>
	<select id= "getSoldList" parameterType="String" resultMap= "ListMap">	
		SELECT			a.p_num, 				
						a.u_username,		
						a.p_title,				
						a.p_date,			
						b.pi_name				
		FROM			product a
		LEFT JOIN	    picture b ON a.p_num = b.p_num
		WHERE 		    u_username= #{username}
		AND             a.p_sale='true'
	</select>	
	
	
	<resultMap type="Picture" id="Dtail_PicMap">
		<result property="pictureName" column="pi_name" />
		<result property="pi_num" column="pi_num" />	
	</resultMap>
	<resultMap type="Auction" id="Dtail_AuctionMap">
		<result property="participant" column="u_name" />
		<result property="price" column="a_price" />
		<result property="aTime" column="a_time" />
	</resultMap>
	
	<resultMap id="DetailMap" type="Product">
		<id property= "p_num" column= "p_num" />
		<result property= "p_num" column= "p_num" />
		<result property= "username" column= "u_username" />
		<result property= "kind" column= "p_kind" />
		<result property= "industry" column= "p_industry" />
		<result property= "brand" column= "p_brand" />
		<result property= "year" column= "p_year" />
		<result property= "startprice" column= "p_startprice" />
		<result property= "title" column= "p_title" />
		<result property= "content" column= "p_content" />
		<result property= "sale" column= "p_sale" />
		<result property= "p_date" column= "p_date" />
		<result property= "address" column= "p_address" />
		
		<collection property="picture" resultMap="Dtail_PicMap"></collection>
		<collection property="auction" resultMap="Dtail_AuctionMap"></collection>
	</resultMap>
		
	
	
	
	
	<select id= "getSaleDetail" parameterType= "int" resultMap= "DetailMap">
			SELECT		*
											
			FROM			product a
			LEFT  JOIN	    picture b ON a.p_num = b.p_num
			LEFT JOIN 				 auction c ON c.p_num = a.p_num
			WHERE 		    a.p_num = #{p_num}
			ORDER BY  a_price DESC

	</select>
	
	
	
	<update id="updateProduct" parameterType="com.used.example.domain.Product">
			update product
			set u_username = #{username},
				p_kind = #{kind},
				p_industry = #{industry},
				p_content = #{content},
				p_brand = #{brand},
				p_year= #{year},
				p_startprice = #{startprice},
				p_title = #{title},
				p_address = #{address}
			where p_num = #{p_num}				
				
	</update>
	
	<delete id="deletePicture" parameterType="com.used.example.domain.Product">
		delete  
		from picture
		where
		<foreach collection="pi_nums" item="num" separator=" or " >
			pi_num = #{num}
		</foreach>
		
	
	</delete>
	

	



</mapper>